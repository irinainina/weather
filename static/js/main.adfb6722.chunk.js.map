{"version":3,"sources":["components/WeatherDisplay/WeatherDisplay.js","App.js","index.js"],"names":["WeatherDisplay","state","weatherData","name","this","props","fetch","then","res","json","setState","weather","iconUrl","icon","main","src","alt","description","temp","temp_max","temp_min","wind","speed","Component","PLACES","App","activePlace","className","map","place","index","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"6RAGqBA,G,wBACnB,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,YAAa,MAHH,E,iFAOO,IAAD,OACZC,EAAOC,KAAKC,MAAMF,KAIxBG,MAHY,qDACVH,EACA,0DACSI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAAQF,KAAK,SAAAE,GACtC,EAAKC,SAAS,CAAER,YAAaO,Q,+BAM/B,IAAMP,EAAcE,KAAKH,MAAMC,YAC/B,IAAKA,EAAa,OAAO,wCACzB,IAAMS,EAAUT,EAAYS,QAAQ,GAC9BC,EAAU,mCAAqCD,EAAQE,KAAO,OACpE,OACE,6BACE,4BACGF,EAAQG,KADX,OACqBZ,EAAYC,KAC/B,yBAAKY,IAAKH,EAASI,IAAKd,EAAYe,eAEtC,uCAAaf,EAAYY,KAAKI,KAA9B,QACA,oCAAUhB,EAAYY,KAAKK,SAA3B,QACA,mCAASjB,EAAYY,KAAKM,SAA1B,QACA,0CAAgBlB,EAAYmB,KAAKC,MAAjC,e,GAjCoCC,cCCtCC,EAAS,CACb,CAAErB,KAAM,UACR,CAAEA,KAAM,UACR,CAAEA,KAAM,QACR,CAAEA,KAAM,UAGWsB,E,YACnB,aAAe,IAAD,8BACZ,+CACKxB,MAAQ,CACXyB,YAAa,GAHH,E,sEAOJ,IAAD,OACDA,EAActB,KAAKH,MAAMyB,YAC/B,OACE,yBAAKC,UAAU,OAEZH,EAAOI,IAAI,SAACC,EAAOC,GAAR,OACV,4BACEC,IAAKD,EACLE,QAAS,WACP,EAAKtB,SAAS,CAAEgB,YAAaI,MAG5BD,EAAM1B,QAIb,kBAAC,EAAD,CACE4B,IAAKL,EACLvB,KAAMqB,EAAOE,GAAavB,Y,GA1BHoB,aCNjCU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.adfb6722.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './WeatherDisplay.css';\r\n\r\nexport default class WeatherDisplay extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      weatherData: null\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const name = this.props.name;\r\n    const URL = \"https://api.openweathermap.org/data/2.5/weather?q=\" +\r\n      name +\r\n      \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\r\n    fetch(URL).then(res => res.json()).then(json => {\r\n      this.setState({ weatherData: json });\r\n    });\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const weatherData = this.state.weatherData;\r\n    if (!weatherData) return <div>Loading</div>;\r\n    const weather = weatherData.weather[0];\r\n    const iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\r\n    return (\r\n      <div>\r\n        <h1>\r\n          {weather.main} in {weatherData.name}\r\n          <img src={iconUrl} alt={weatherData.description} />\r\n        </h1>\r\n        <p>Current: {weatherData.main.temp}°</p>\r\n        <p>High: {weatherData.main.temp_max}°</p>\r\n        <p>Low: {weatherData.main.temp_min}°</p>\r\n        <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport WeatherDisplay from './components/WeatherDisplay/WeatherDisplay';\n\nconst PLACES = [\n  { name: \"London\" },\n  { name: \"Moscow\" },\n  { name: \"Kiev\" },\n  { name: \"Minsk\" }\n];\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activePlace: 0,\n    };\n  }\n  \n  render() {\n    const activePlace = this.state.activePlace;\n    return (\n      <div className=\"App\">        \n      \n        {PLACES.map((place, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              this.setState({ activePlace: index });\n            }}\n          >\n              {place.name}\n          </button>\n        ))}\n\n        <WeatherDisplay \n          key={activePlace}\n          name={PLACES[activePlace].name} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}